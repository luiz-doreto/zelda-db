import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';
import { Creature } from '../models/creature.model';
import { Equipment } from '../models/equipment.model';
import { Material } from '../models/material.model';
import { Monster } from '../models/monster.model';
import { IApiResponse } from './types';

export const zeldaApi = createApi({
  reducerPath: 'zeldaApi',
  // cache tags generated by this slice
  tagTypes: ['monsters', 'materials', 'equipment', 'creatures'],
  baseQuery: fetchBaseQuery({
    baseUrl: 'https://botw-compendium.herokuapp.com/api/v3/compendium/',
  }),
  endpoints: build => ({
    getAllMonsters: build.query<IApiResponse<Monster>, void>({
      query: () => `category/monsters`,
      // generate a cache tag for this query (populate this cache)
      providesTags: ['monsters'],
      // used in case of mutations to invalidate the cache
      // invalidatesTags: ['Post'],
    }),
    getAllMaterials: build.query<IApiResponse<Material>, void>({
      query: () => `category/materials`,
      providesTags: ['materials'],
    }),
    getAllEquipments: build.query<IApiResponse<Equipment>, void>({
      query: () => `category/equipment`,
      providesTags: ['equipment'],
    }),
    getAllCreatures: build.query<IApiResponse<Creature>, void>({
      query: () => `category/creatures`,
      providesTags: ['creatures'],
    }),
  }),
});

// Export hooks for usage in function components, which are
// auto-generated based on the defined endpoints
export const {
  useGetAllMonstersQuery,
  useGetAllMaterialsQuery,
  useGetAllEquipmentsQuery,
  useGetAllCreaturesQuery,
} = zeldaApi;
